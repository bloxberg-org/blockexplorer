FROM docker.io/bitwalker/alpine-elixir-phoenix:1.14 AS builder

WORKDIR /app

RUN apk --no-cache --update add alpine-sdk gmp-dev automake libtool inotify-tools autoconf python3 file qemu-x86_64

ENV GLIBC_REPO=https://github.com/sgerrand/alpine-pkg-glibc \
    GLIBC_VERSION=2.30-r0 \
    PORT=4000 \
    MIX_ENV="prod" \
    SECRET_KEY_BASE="RMgI4C1HSkxsEjdhtGMfwAHfyT6CKWXOgzCboJflfSm4jeAlic52io05KB6mqzc5"


# Copies from env-file ###################################################################################################################

# DOCKER_TAG=
ENV ETHEREUM_JSONRPC_VARIANT=parity
ENV ETHEREUM_JSONRPC_HTTP_URL=https://core.bloxberg.org
# ETHEREUM_JSONRPC_FALLBACK_HTTP_URL=
ENV DATABASE_URL=postgresql://postgres:@host.docker.internal:7432/blockscout?ssl=false
ENV ETHEREUM_JSONRPC_TRACE_URL=https://core.bloxberg.org
# ETHEREUM_JSONRPC_FALLBACK_TRACE_URL=
# ETHEREUM_JSONRPC_HTTP_TIMEOUT=
ENV NETWORK=
ENV SUBNETWORK=bloxberg
ENV LOGO=/images/bloxberg-logo_neue-Farben.png
# ETHEREUM_JSONRPC_WS_URL=
ENV ETHEREUM_JSONRPC_TRANSPORT=http
ENV ETHEREUM_JSONRPC_DISABLE_ARCHIVE_BALANCES=false
ENV IPC_PATH=
ENV NETWORK_PATH=/
ENV BLOCKSCOUT_HOST=blockexplorer.bloxberg.org
ENV BLOCKSCOUT_PROTOCOL=
# SECRET_KEY_BASE=
# CHECK_ORIGIN=
ENV PORT=4000
ENV COIN_NAME=Berg
ENV METADATA_CONTRACT=0xf2cde379d6818db4a8992ed132345e18e99689e9
ENV VALIDATORS_CONTRACT=0x9850711951A84Ef8a2A31a7868d0dCa34B0661cA
# KEYS_MANAGER_CONTRACT=
# REWARDS_CONTRACT=
# TOKEN_BRIDGE_CONTRACT=
ENV EMISSION_FORMAT=DEFAULT
# CHAIN_SPEC_PATH=
# SUPPLY_MODULE=
ENV COIN=
ENV EXCHANGE_RATES_COIN=
# EXCHANGE_RATES_SOURCE=
# EXCHANGE_RATES_COINGECKO_COIN_ID=
# EXCHANGE_RATES_COINGECKO_API_KEY=
# EXCHANGE_RATES_COINMARKETCAP_API_KEY=
ENV POOL_SIZE=90
# EXCHANGE_RATES_COINGECKO_PLATFORM_ID=
# TOKEN_EXCHANGE_RATE_INTERVAL=
# TOKEN_EXCHANGE_RATE_REFETCH_INTERVAL=
# TOKEN_EXCHANGE_RATE_MAX_BATCH_SIZE=
# DISABLE_TOKEN_EXCHANGE_RATE=
ENV POOL_SIZE_API=10
ENV ECTO_USE_SSL=false
# DATADOG_HOST=
# DATADOG_PORT=
# SPANDEX_BATCH_SIZE=
# SPANDEX_SYNC_THRESHOLD=
ENV HEART_BEAT_TIMEOUT=30
# HEART_COMMAND=
#BLOCKSCOUT_VERSION=
ENV RELEASE_LINK=
ENV BLOCK_TRANSFORMER=base
# GRAPHIQL_TRANSACTION=
# BLOCK_RANGES=
# FIRST_BLOCK=
# LAST_BLOCK=
# TRACE_FIRST_BLOCK=
# TRACE_LAST_BLOCK=
# FOOTER_CHAT_LINK=
# FOOTER_FORUM_LINK_ENABLED=
# FOOTER_FORUM_LINK=
# FOOTER_TELEGRAM_LINK_ENABLED=
# FOOTER_TELEGRAM_LINK=
# FOOTER_GITHUB_LINK=
ENV FOOTER_LOGO=/images/bloxberg-logo_neue-Farben.png
ENV FOOTER_LINK_TO_OTHER_EXPLORERS=false
ENV FOOTER_OTHER_EXPLORERS={}
ENV SUPPORTED_CHAINS="[{'title':'bloxberg Mainnet','url':'https://blockexplorer.bloxberg.org/'}]"
ENV CACHE_BLOCK_COUNT_PERIOD=7200
ENV CACHE_TXS_COUNT_PERIOD=7200
ENV CACHE_ADDRESS_SUM_PERIOD=3600
ENV CACHE_TOTAL_GAS_USAGE_PERIOD=3600
ENV CACHE_ADDRESS_TRANSACTIONS_GAS_USAGE_COUNTER_PERIOD=1800
ENV CACHE_TOKEN_HOLDERS_COUNTER_PERIOD=3600
ENV CACHE_TOKEN_TRANSFERS_COUNTER_PERIOD=3600
ENV CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL=1800
ENV CACHE_AVERAGE_BLOCK_PERIOD=1800
ENV CACHE_MARKET_HISTORY_PERIOD=21600
ENV CACHE_ADDRESS_TRANSACTIONS_COUNTER_PERIOD=1800
ENV CACHE_ADDRESS_TOKENS_USD_SUM_PERIOD=3600
ENV CACHE_ADDRESS_TOKEN_TRANSFERS_COUNTER_PERIOD=1800
ENV TOKEN_METADATA_UPDATE_INTERVAL=172800
ENV CONTRACT_VERIFICATION_ALLOWED_EVM_VERSIONS=homestead,tangerineWhistle,spuriousDragon,byzantium,constantinople,petersburg,istanbul,berlin,london,paris,default
# CONTRACT_VERIFICATION_MAX_LIBRARIES=10
ENV CONTRACT_MAX_STRING_LENGTH_WITHOUT_TRIMMING=2040
# CONTRACT_DISABLE_INTERACTION=
ENV UNCLES_IN_AVERAGE_BLOCK_TIME=false
ENV DISABLE_WEBAPP=false
ENV API_V1_READ_METHODS_DISABLED=false
ENV API_V1_WRITE_METHODS_DISABLED=false
ENV DISABLE_INDEXER=false
ENV DISABLE_REALTIME_INDEXER=false
ENV INDEXER_DISABLE_TOKEN_INSTANCE_REALTIME_FETCHER=false
ENV INDEXER_DISABLE_TOKEN_INSTANCE_RETRY_FETCHER=false
ENV INDEXER_DISABLE_TOKEN_INSTANCE_SANITIZE_FETCHER=false
ENV INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER=false
ENV INDEXER_DISABLE_INTERNAL_TRANSACTIONS_FETCHER=false
# INDEXER_CATCHUP_BLOCKS_BATCH_SIZE=
# INDEXER_CATCHUP_BLOCKS_CONCURRENCY=
# INDEXER_CATCHUP_BLOCK_INTERVAL=
# INDEXER_INTERNAL_TRANSACTIONS_BATCH_SIZE=
# INDEXER_INTERNAL_TRANSACTIONS_CONCURRENCY=
# INDEXER_BLOCK_REWARD_BATCH_SIZE=
# INDEXER_BLOCK_REWARD_CONCURRENCY=
# INDEXER_TOKEN_INSTANCE_RETRY_REFETCH_INTERVAL=
# INDEXER_TOKEN_INSTANCE_RETRY_CONCURRENCY=
# INDEXER_TOKEN_INSTANCE_REALTIME_CONCURRENCY=
# INDEXER_TOKEN_INSTANCE_SANITIZE_CONCURRENCY=
# INDEXER_COIN_BALANCES_BATCH_SIZE=
# INDEXER_COIN_BALANCES_CONCURRENCY=
# INDEXER_RECEIPTS_BATCH_SIZE=
# INDEXER_RECEIPTS_CONCURRENCY=
# INDEXER_TOKEN_BALANCES_BATCH_SIZE=
# INDEXER_TX_ACTIONS_ENABLE=
# INDEXER_TX_ACTIONS_MAX_TOKEN_CACHE_SIZE=
# INDEXER_TX_ACTIONS_REINDEX_FIRST_BLOCK=
# INDEXER_TX_ACTIONS_REINDEX_LAST_BLOCK=
# INDEXER_TX_ACTIONS_REINDEX_PROTOCOLS=
# INDEXER_TX_ACTIONS_AAVE_V3_POOL_CONTRACT=
# INDEXER_REALTIME_FETCHER_MAX_GAP=
# INDEXER_DISABLE_WITHDRAWALS_FETCHER=
# WITHDRAWALS_FIRST_BLOCK=
# TOKEN_ID_MIGRATION_FIRST_BLOCK=
# TOKEN_ID_MIGRATION_CONCURRENCY=
# TOKEN_ID_MIGRATION_BATCH_SIZE=
# INDEXER_INTERNAL_TRANSACTIONS_TRACER_TYPE=
ENV WEBAPP_URL="https://bloxberg.org/"
# API_URL=
ENV SHOW_ADDRESS_MARKETCAP_PERCENTAGE=true
ENV CHECKSUM_ADDRESS_HASHES=true
ENV CHECKSUM_FUNCTION=eth
ENV DISABLE_EXCHANGE_RATES=true
ENV TXS_STATS_ENABLED=true
ENV SHOW_PRICE_CHART=false
ENV SHOW_PRICE_CHART_LEGEND=false
ENV SHOW_TXS_CHART=true
ENV TXS_HISTORIAN_INIT_LAG=0
ENV TXS_STATS_DAYS_TO_COMPILE_AT_INIT=10
ENV COIN_BALANCE_HISTORY_DAYS=90
ENV APPS_MENU=true
ENV EXTERNAL_APPS=[]
# GAS_PRICE=
# RESTRICTED_LIST=
# RESTRICTED_LIST_KEY=
ENV SHOW_MAINTENANCE_ALERT=false
ENV MAINTENANCE_ALERT_MESSAGE=
ENV SOURCIFY_INTEGRATION_ENABLED=false
ENV SOURCIFY_SERVER_URL=
ENV SOURCIFY_REPO_URL=
ENV CHAIN_ID=
ENV MAX_SIZE_UNLESS_HIDE_ARRAY=50
ENV HIDE_BLOCK_MINER=false
ENV DISPLAY_TOKEN_ICONS=false
ENV SHOW_TENDERLY_LINK=false
ENV TENDERLY_CHAIN_PATH=
ENV RE_CAPTCHA_SECRET_KEY=
ENV RE_CAPTCHA_CLIENT_KEY=
ENV RE_CAPTCHA_V3_SECRET_KEY=
ENV RE_CAPTCHA_V3_CLIENT_KEY=
ENV RE_CAPTCHA_DISABLED=false
ENV JSON_RPC=
#API_RATE_LIMIT_DISABLED=true
ENV API_RATE_LIMIT_TIME_INTERVAL=1s
ENV API_RATE_LIMIT_BY_IP_TIME_INTERVAL=5m
ENV API_RATE_LIMIT=50
ENV API_RATE_LIMIT_BY_KEY=50
ENV API_RATE_LIMIT_BY_WHITELISTED_IP=50
ENV API_RATE_LIMIT_WHITELISTED_IPS=
ENV API_RATE_LIMIT_STATIC_API_KEY=
ENV API_RATE_LIMIT_UI_V2_WITH_TOKEN=5
ENV API_RATE_LIMIT_BY_IP=3000
# API_RATE_LIMIT_HAMMER_REDIS_URL=redis://redis_db:6379/1
# API_RATE_LIMIT_IS_BLOCKSCOUT_BEHIND_PROXY=false
ENV API_RATE_LIMIT_UI_V2_TOKEN_TTL_IN_SECONDS=18000
ENV FETCH_REWARDS_WAY=trace_block
ENV MICROSERVICE_SC_VERIFIER_ENABLED=true
ENV MICROSERVICE_SC_VERIFIER_URL=http://smart-contract-verifier:8050/
ENV MICROSERVICE_SC_VERIFIER_TYPE=sc_verifier
ENV MICROSERVICE_ETH_BYTECODE_DB_INTERVAL_BETWEEN_LOOKUPS=10m
ENV MICROSERVICE_VISUALIZE_SOL2UML_ENABLED=true
ENV MICROSERVICE_VISUALIZE_SOL2UML_URL=http://visualizer:8050/
ENV MICROSERVICE_SIG_PROVIDER_ENABLED=true
ENV MICROSERVICE_SIG_PROVIDER_URL=http://sig-provider:8050/
ENV DECODE_NOT_A_CONTRACT_CALLS=true
# DATABASE_READ_ONLY_API_URL=
# ACCOUNT_DATABASE_URL=
# ACCOUNT_POOL_SIZE=
# ACCOUNT_AUTH0_DOMAIN=
# ACCOUNT_AUTH0_CLIENT_ID=
# ACCOUNT_AUTH0_CLIENT_SECRET=
# ACCOUNT_PUBLIC_TAGS_AIRTABLE_URL=
# ACCOUNT_PUBLIC_TAGS_AIRTABLE_API_KEY=
# ACCOUNT_SENDGRID_API_KEY=
# ACCOUNT_SENDGRID_SENDER=
# ACCOUNT_SENDGRID_TEMPLATE=
ENV ACCOUNT_CLOAK_KEY=
ENV ACCOUNT_ENABLED=false
ENV ACCOUNT_REDIS_URL=redis://redis_db:6379
# MIXPANEL_TOKEN=
# MIXPANEL_URL=
# AMPLITUDE_API_KEY=
# AMPLITUDE_URL=
ENV EIP_1559_ELASTICITY_MULTIPLIER=2
# API_SENSITIVE_ENDPOINTS_KEY=
# ACCOUNT_VERIFICATION_EMAIL_RESEND_INTERVAL=
ARG CACHE_EXCHANGE_RATES_PERIOD=""
ARG API_V1_READ_METHODS_DISABLED="false"
ARG DISABLE_WEBAPP="false"
ARG API_V1_WRITE_METHODS_DISABLED="false"
ARG CACHE_TOTAL_GAS_USAGE_COUNTER_ENABLED=""
ARG ADMIN_PANEL_ENABLED=""
ARG RELEASE_VERSION=5.1.5
ARG CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL=1800
ARG BLOCKSCOUT_VERSION=5.1.5

####################################################################################################################################################

# RUN set -ex && \
#     apk --update add libstdc++ curl ca-certificates && \
#     for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION}; \
#         do curl -sSL ${GLIBC_REPO}/releases/download/${GLIBC_VERSION}/${pkg}.apk -o /tmp/${pkg}.apk; done && \
#     apk add --allow-untrusted /tmp/*.apk && \
#     rm -v /tmp/*.apk && \
#     /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib

# ARG CACHE_EXCHANGE_RATES_PERIOD
# ARG API_V1_READ_METHODS_DISABLED
# ARG DISABLE_WEBAPP
# ARG API_V1_WRITE_METHODS_DISABLED
# ARG CACHE_TOTAL_GAS_USAGE_COUNTER_ENABLED
# ARG ADMIN_PANEL_ENABLED
# ARG CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL
# ARG SESSION_COOKIE_DOMAIN
# ARG MIXPANEL_TOKEN
# ARG MIXPANEL_URL
# ARG AMPLITUDE_API_KEY
# ARG AMPLITUDE_URL

# # Cache elixir deps
# ADD mix.exs mix.lock ./
# ADD apps/block_scout_web/mix.exs ./apps/block_scout_web/
# ADD apps/explorer/mix.exs ./apps/explorer/
# ADD apps/ethereum_jsonrpc/mix.exs ./apps/ethereum_jsonrpc/
# ADD apps/indexer/mix.exs ./apps/indexer/

# RUN mix do deps.get, local.rebar --force, deps.compile

# ADD . .

# COPY . .

# # Run forderground build and phoenix digest
# RUN mix compile && npm install npm@latest

# # Add blockscout npm deps
# RUN cd apps/block_scout_web/assets/ && \
#     npm install && \
#     npm run deploy && \
#     cd /app/apps/explorer/ && \
#     npm install && \
#     apk update && \
#     apk del --force-broken-world alpine-sdk gmp-dev automake libtool inotify-tools autoconf python3

# RUN mix phx.digest

# RUN mkdir -p /opt/release \
#   && mix release blockscout \
#   && mv _build/${MIX_ENV}/rel/blockscout /opt/release

# ##############################################################
# FROM bitwalker/alpine-elixir-phoenix:1.14

# ARG RELEASE_VERSION
# ENV RELEASE_VERSION=${RELEASE_VERSION}
# ARG BLOCKSCOUT_VERSION
# ENV BLOCKSCOUT_VERSION=${BLOCKSCOUT_VERSION}

# RUN apk --no-cache --update add jq

# WORKDIR /app

# COPY --from=builder /opt/release/blockscout .
# COPY --from=builder /app/apps/explorer/node_modules ./node_modules
# COPY --from=builder /app/config/config_helper.exs ./config/config_helper.exs
# COPY --from=builder /app/config/config_helper.exs /app/releases/${RELEASE_VERSION}/config_helper.exs

# CMD ["./start.sh"]

RUN set -ex && \
    apk --update add libstdc++ curl ca-certificates && \
    for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION}; \
        do curl -sSL ${GLIBC_REPO}/releases/download/${GLIBC_VERSION}/${pkg}.apk -o /tmp/${pkg}.apk; done && \
    apk add --allow-untrusted /tmp/*.apk && \
    rm -v /tmp/*.apk && \
    /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib

# Cache elixir deps
ADD mix.exs mix.lock ./
ADD apps/block_scout_web/mix.exs ./apps/block_scout_web/
ADD apps/explorer/mix.exs ./apps/explorer/
ADD apps/ethereum_jsonrpc/mix.exs ./apps/ethereum_jsonrpc/
ADD apps/indexer/mix.exs ./apps/indexer/

RUN mix do deps.get, local.rebar --force, deps.compile

ADD . .

COPY . .

# Run forderground build and phoenix digest
RUN mix compile && npm install npm@latest

# Add blockscout npm deps
RUN cd apps/block_scout_web/assets/ && \
    npm install && \
    npm run deploy && \
    cd /app/apps/explorer/ && \
    npm install && \
    apk update && \
    apk del --force-broken-world alpine-sdk gmp-dev automake libtool inotify-tools autoconf python3

RUN mix phx.digest

RUN mkdir -p /opt/release \
  && mix release blockscout \
  && mv _build/${MIX_ENV}/rel/blockscout /opt/release

##############################################################
FROM bitwalker/alpine-elixir-phoenix:1.14

ENV RELEASE_VERSION=${RELEASE_VERSION}

ENV BLOCKSCOUT_VERSION=${BLOCKSCOUT_VERSION}

RUN apk --no-cache --update add jq

WORKDIR /app

COPY --from=builder /opt/release/blockscout .
COPY --from=builder /app/apps/explorer/node_modules ./node_modules
COPY --from=builder /app/config/config_helper.exs ./config/config_helper.exs
COPY --from=builder /app/config/config_helper.exs /app/releases/${RELEASE_VERSION}/config_helper.exs


CMD ["./start.sh"]
